Local Functions and Their Full Disassembly from Object Files:

File: assignment4_4.o

assignment4_4.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 30          	sub    $0x30,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  15:	31 c0                	xor    %eax,%eax
  17:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  1e:	00 
  1f:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
  26:	00 
  27:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 2e <main+0x2e>
  2e:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 35 <main+0x35>
  35:	e8 00 00 00 00       	call   3a <main+0x3a>
  3a:	48 89 c2             	mov    %rax,%rdx
  3d:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 44 <main+0x44>
  44:	48 89 c6             	mov    %rax,%rsi
  47:	48 89 d7             	mov    %rdx,%rdi
  4a:	e8 00 00 00 00       	call   4f <main+0x4f>
  4f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
  53:	48 89 c6             	mov    %rax,%rsi
  56:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 5d <main+0x5d>
  5d:	e8 00 00 00 00       	call   62 <main+0x62>
  62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  66:	48 85 c0             	test   %rax,%rax
  69:	0f 84 83 00 00 00    	je     f2 <main+0xf2>
  6f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  73:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
  7a:	66 66 66 
  7d:	48 89 c8             	mov    %rcx,%rax
  80:	48 f7 ea             	imul   %rdx
  83:	48 c1 fa 02          	sar    $0x2,%rdx
  87:	48 89 c8             	mov    %rcx,%rax
  8a:	48 c1 f8 3f          	sar    $0x3f,%rax
  8e:	48 29 c2             	sub    %rax,%rdx
  91:	48 89 d0             	mov    %rdx,%rax
  94:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  98:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  9c:	48 89 d0             	mov    %rdx,%rax
  9f:	48 c1 e0 02          	shl    $0x2,%rax
  a3:	48 01 d0             	add    %rdx,%rax
  a6:	48 01 c0             	add    %rax,%rax
  a9:	48 29 c1             	sub    %rax,%rcx
  ac:	48 89 c8             	mov    %rcx,%rax
  af:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  b7:	48 0f af 45 e8       	imul   -0x18(%rbp),%rax
  bc:	48 01 45 e0          	add    %rax,-0x20(%rbp)
  c0:	48 d1 65 e8          	shlq   -0x18(%rbp)
  c4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  c8:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
  cf:	66 66 66 
  d2:	48 89 c8             	mov    %rcx,%rax
  d5:	48 f7 ea             	imul   %rdx
  d8:	48 c1 fa 02          	sar    $0x2,%rdx
  dc:	48 89 c8             	mov    %rcx,%rax
  df:	48 c1 f8 3f          	sar    $0x3f,%rax
  e3:	48 29 c2             	sub    %rax,%rdx
  e6:	48 89 d0             	mov    %rdx,%rax
  e9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  ed:	e9 70 ff ff ff       	jmp    62 <main+0x62>
  f2:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # f9 <main+0xf9>
  f9:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 100 <main+0x100>
 100:	e8 00 00 00 00       	call   105 <main+0x105>
 105:	48 89 c2             	mov    %rax,%rdx
 108:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 10c:	48 89 c6             	mov    %rax,%rsi
 10f:	48 89 d7             	mov    %rdx,%rdi
 112:	e8 00 00 00 00       	call   117 <main+0x117>
 117:	48 89 c2             	mov    %rax,%rdx
 11a:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 121 <main+0x121>
 121:	48 89 c6             	mov    %rax,%rsi
 124:	48 89 d7             	mov    %rdx,%rdi
 127:	e8 00 00 00 00       	call   12c <main+0x12c>
 12c:	b8 00 00 00 00       	mov    $0x0,%eax
 131:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
 135:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
 13c:	00 00 
 13e:	74 05                	je     145 <main+0x145>
 140:	e8 00 00 00 00       	call   145 <main+0x145>
 145:	c9                   	leave  
 146:	c3                   	ret    

0000000000000147 <_Z41__static_initialization_and_destruction_0ii>:
 147:	55                   	push   %rbp
 148:	48 89 e5             	mov    %rsp,%rbp
 14b:	48 83 ec 10          	sub    $0x10,%rsp
 14f:	89 7d fc             	mov    %edi,-0x4(%rbp)
 152:	89 75 f8             	mov    %esi,-0x8(%rbp)
 155:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
 159:	75 32                	jne    18d <_Z41__static_initialization_and_destruction_0ii+0x46>
 15b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
 162:	75 29                	jne    18d <_Z41__static_initialization_and_destruction_0ii+0x46>
 164:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 16b <_Z41__static_initialization_and_destruction_0ii+0x24>
 16b:	e8 00 00 00 00       	call   170 <_Z41__static_initialization_and_destruction_0ii+0x29>
 170:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 177 <_Z41__static_initialization_and_destruction_0ii+0x30>
 177:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 17e <_Z41__static_initialization_and_destruction_0ii+0x37>
 17e:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 185 <_Z41__static_initialization_and_destruction_0ii+0x3e>
 185:	48 89 c7             	mov    %rax,%rdi
 188:	e8 00 00 00 00       	call   18d <_Z41__static_initialization_and_destruction_0ii+0x46>
 18d:	90                   	nop
 18e:	c9                   	leave  
 18f:	c3                   	ret    

0000000000000190 <_GLOBAL__sub_I_main>:
 190:	55                   	push   %rbp
 191:	48 89 e5             	mov    %rsp,%rbp
 194:	be ff ff 00 00       	mov    $0xffff,%esi
 199:	bf 01 00 00 00       	mov    $0x1,%edi
 19e:	e8 a4 ff ff ff       	call   147 <_Z41__static_initialization_and_destruction_0ii>
 1a3:	5d                   	pop    %rbp
 1a4:	c3                   	ret    

File: assignment4_1.o

assignment4_1.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
   f:	83 7d f8 09          	cmpl   $0x9,-0x8(%rbp)
  13:	0f 8f 8a 00 00 00    	jg     a3 <main+0xa3>
  19:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  20:	83 7d f4 09          	cmpl   $0x9,-0xc(%rbp)
  24:	7f 74                	jg     9a <main+0x9a>
  26:	8b 45 f8             	mov    -0x8(%rbp),%eax
  29:	0f af 45 f4          	imul   -0xc(%rbp),%eax
  2d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  30:	8b 45 f8             	mov    -0x8(%rbp),%eax
  33:	89 c6                	mov    %eax,%esi
  35:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 3c <main+0x3c>
  3c:	e8 00 00 00 00       	call   41 <main+0x41>
  41:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 48 <main+0x48>
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	e8 00 00 00 00       	call   50 <main+0x50>
  50:	48 89 c2             	mov    %rax,%rdx
  53:	8b 45 f4             	mov    -0xc(%rbp),%eax
  56:	89 c6                	mov    %eax,%esi
  58:	48 89 d7             	mov    %rdx,%rdi
  5b:	e8 00 00 00 00       	call   60 <main+0x60>
  60:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 67 <main+0x67>
  67:	48 89 c7             	mov    %rax,%rdi
  6a:	e8 00 00 00 00       	call   6f <main+0x6f>
  6f:	48 89 c2             	mov    %rax,%rdx
  72:	8b 45 fc             	mov    -0x4(%rbp),%eax
  75:	89 c6                	mov    %eax,%esi
  77:	48 89 d7             	mov    %rdx,%rdi
  7a:	e8 00 00 00 00       	call   7f <main+0x7f>
  7f:	48 89 c2             	mov    %rax,%rdx
  82:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 89 <main+0x89>
  89:	48 89 c6             	mov    %rax,%rsi
  8c:	48 89 d7             	mov    %rdx,%rdi
  8f:	e8 00 00 00 00       	call   94 <main+0x94>
  94:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  98:	eb 86                	jmp    20 <main+0x20>
  9a:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  9e:	e9 6c ff ff ff       	jmp    f <main+0xf>
  a3:	b8 00 00 00 00       	mov    $0x0,%eax
  a8:	c9                   	leave  
  a9:	c3                   	ret    

00000000000000aa <_Z41__static_initialization_and_destruction_0ii>:
  aa:	55                   	push   %rbp
  ab:	48 89 e5             	mov    %rsp,%rbp
  ae:	48 83 ec 10          	sub    $0x10,%rsp
  b2:	89 7d fc             	mov    %edi,-0x4(%rbp)
  b5:	89 75 f8             	mov    %esi,-0x8(%rbp)
  b8:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  bc:	75 32                	jne    f0 <_Z41__static_initialization_and_destruction_0ii+0x46>
  be:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
  c5:	75 29                	jne    f0 <_Z41__static_initialization_and_destruction_0ii+0x46>
  c7:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # ce <_Z41__static_initialization_and_destruction_0ii+0x24>
  ce:	e8 00 00 00 00       	call   d3 <_Z41__static_initialization_and_destruction_0ii+0x29>
  d3:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # da <_Z41__static_initialization_and_destruction_0ii+0x30>
  da:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # e1 <_Z41__static_initialization_and_destruction_0ii+0x37>
  e1:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # e8 <_Z41__static_initialization_and_destruction_0ii+0x3e>
  e8:	48 89 c7             	mov    %rax,%rdi
  eb:	e8 00 00 00 00       	call   f0 <_Z41__static_initialization_and_destruction_0ii+0x46>
  f0:	90                   	nop
  f1:	c9                   	leave  
  f2:	c3                   	ret    

00000000000000f3 <_GLOBAL__sub_I_main>:
  f3:	55                   	push   %rbp
  f4:	48 89 e5             	mov    %rsp,%rbp
  f7:	be ff ff 00 00       	mov    $0xffff,%esi
  fc:	bf 01 00 00 00       	mov    $0x1,%edi
 101:	e8 a4 ff ff ff       	call   aa <_Z41__static_initialization_and_destruction_0ii>
 106:	5d                   	pop    %rbp
 107:	c3                   	ret    

File: assignment4_2.o

assignment4_2.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 30          	sub    $0x30,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  15:	31 c0                	xor    %eax,%eax
  17:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1e <main+0x1e>
  1e:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 25 <main+0x25>
  25:	e8 00 00 00 00       	call   2a <main+0x2a>
  2a:	48 89 c2             	mov    %rax,%rdx
  2d:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 34 <main+0x34>
  34:	48 89 c6             	mov    %rax,%rsi
  37:	48 89 d7             	mov    %rdx,%rdi
  3a:	e8 00 00 00 00       	call   3f <main+0x3f>
  3f:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
  43:	48 89 c6             	mov    %rax,%rsi
  46:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 4d <main+0x4d>
  4d:	e8 00 00 00 00       	call   52 <main+0x52>
  52:	8b 55 ec             	mov    -0x14(%rbp),%edx
  55:	8b 45 ec             	mov    -0x14(%rbp),%eax
  58:	0f af d0             	imul   %eax,%edx
  5b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  5e:	0f af c2             	imul   %edx,%eax
  61:	89 45 ec             	mov    %eax,-0x14(%rbp)
  64:	8b 45 ec             	mov    -0x14(%rbp),%eax
  67:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
  6b:	f2 0f 10 0d 00 00 00 	movsd  0x0(%rip),%xmm1        # 73 <main+0x73>
  72:	00 
  73:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
  77:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
  7c:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 83 <main+0x83>
  83:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 8a <main+0x8a>
  8a:	e8 00 00 00 00       	call   8f <main+0x8f>
  8f:	48 89 c2             	mov    %rax,%rdx
  92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  96:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  9a:	f2 0f 10 45 d8       	movsd  -0x28(%rbp),%xmm0
  9f:	48 89 d7             	mov    %rdx,%rdi
  a2:	e8 00 00 00 00       	call   a7 <main+0xa7>
  a7:	b8 00 00 00 00       	mov    $0x0,%eax
  ac:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  b0:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  b7:	00 00 
  b9:	74 05                	je     c0 <main+0xc0>
  bb:	e8 00 00 00 00       	call   c0 <main+0xc0>
  c0:	c9                   	leave  
  c1:	c3                   	ret    

00000000000000c2 <_Z41__static_initialization_and_destruction_0ii>:
  c2:	55                   	push   %rbp
  c3:	48 89 e5             	mov    %rsp,%rbp
  c6:	48 83 ec 10          	sub    $0x10,%rsp
  ca:	89 7d fc             	mov    %edi,-0x4(%rbp)
  cd:	89 75 f8             	mov    %esi,-0x8(%rbp)
  d0:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  d4:	75 32                	jne    108 <_Z41__static_initialization_and_destruction_0ii+0x46>
  d6:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
  dd:	75 29                	jne    108 <_Z41__static_initialization_and_destruction_0ii+0x46>
  df:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # e6 <_Z41__static_initialization_and_destruction_0ii+0x24>
  e6:	e8 00 00 00 00       	call   eb <_Z41__static_initialization_and_destruction_0ii+0x29>
  eb:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # f2 <_Z41__static_initialization_and_destruction_0ii+0x30>
  f2:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # f9 <_Z41__static_initialization_and_destruction_0ii+0x37>
  f9:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 100 <_Z41__static_initialization_and_destruction_0ii+0x3e>
 100:	48 89 c7             	mov    %rax,%rdi
 103:	e8 00 00 00 00       	call   108 <_Z41__static_initialization_and_destruction_0ii+0x46>
 108:	90                   	nop
 109:	c9                   	leave  
 10a:	c3                   	ret    

000000000000010b <_GLOBAL__sub_I_main>:
 10b:	55                   	push   %rbp
 10c:	48 89 e5             	mov    %rsp,%rbp
 10f:	be ff ff 00 00       	mov    $0xffff,%esi
 114:	bf 01 00 00 00       	mov    $0x1,%edi
 119:	e8 a4 ff ff ff       	call   c2 <_Z41__static_initialization_and_destruction_0ii>
 11e:	5d                   	pop    %rbp
 11f:	c3                   	ret    

File: assignment4_3.o

assignment4_3.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  15:	31 c0                	xor    %eax,%eax
  17:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  1e:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 25 <main+0x25>
  25:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 2c <main+0x2c>
  2c:	e8 00 00 00 00       	call   31 <main+0x31>
  31:	48 89 c2             	mov    %rax,%rdx
  34:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3b <main+0x3b>
  3b:	48 89 c6             	mov    %rax,%rsi
  3e:	48 89 d7             	mov    %rdx,%rdi
  41:	e8 00 00 00 00       	call   46 <main+0x46>
  46:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
  4a:	48 89 c6             	mov    %rax,%rsi
  4d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 54 <main+0x54>
  54:	e8 00 00 00 00       	call   59 <main+0x59>
  59:	8b 45 e8             	mov    -0x18(%rbp),%eax
  5c:	83 e8 01             	sub    $0x1,%eax
  5f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  62:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
  69:	8b 45 e8             	mov    -0x18(%rbp),%eax
  6c:	39 45 f0             	cmp    %eax,-0x10(%rbp)
  6f:	7f 72                	jg     e3 <main+0xe3>
  71:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  78:	8b 45 ec             	mov    -0x14(%rbp),%eax
  7b:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  7e:	7f 19                	jg     99 <main+0x99>
  80:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 87 <main+0x87>
  87:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 8e <main+0x8e>
  8e:	e8 00 00 00 00       	call   93 <main+0x93>
  93:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  97:	eb df                	jmp    78 <main+0x78>
  99:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  9d:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  a4:	8b 45 f0             	mov    -0x10(%rbp),%eax
  a7:	01 c0                	add    %eax,%eax
  a9:	83 e8 01             	sub    $0x1,%eax
  ac:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  af:	7f 19                	jg     ca <main+0xca>
  b1:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # b8 <main+0xb8>
  b8:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # bf <main+0xbf>
  bf:	e8 00 00 00 00       	call   c4 <main+0xc4>
  c4:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  c8:	eb da                	jmp    a4 <main+0xa4>
  ca:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # d1 <main+0xd1>
  d1:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # d8 <main+0xd8>
  d8:	e8 00 00 00 00       	call   dd <main+0xdd>
  dd:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  e1:	eb 86                	jmp    69 <main+0x69>
  e3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  ea:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
  f1:	8b 45 e8             	mov    -0x18(%rbp),%eax
  f4:	83 e8 01             	sub    $0x1,%eax
  f7:	39 45 f0             	cmp    %eax,-0x10(%rbp)
  fa:	7f 75                	jg     171 <main+0x171>
  fc:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
 103:	8b 45 ec             	mov    -0x14(%rbp),%eax
 106:	3b 45 f4             	cmp    -0xc(%rbp),%eax
 109:	7f 19                	jg     124 <main+0x124>
 10b:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 112 <main+0x112>
 112:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 119 <main+0x119>
 119:	e8 00 00 00 00       	call   11e <main+0x11e>
 11e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 122:	eb df                	jmp    103 <main+0x103>
 124:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 128:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
 12f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 132:	2b 45 f0             	sub    -0x10(%rbp),%eax
 135:	01 c0                	add    %eax,%eax
 137:	83 e8 01             	sub    $0x1,%eax
 13a:	39 45 ec             	cmp    %eax,-0x14(%rbp)
 13d:	7f 19                	jg     158 <main+0x158>
 13f:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 146 <main+0x146>
 146:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 14d <main+0x14d>
 14d:	e8 00 00 00 00       	call   152 <main+0x152>
 152:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 156:	eb d7                	jmp    12f <main+0x12f>
 158:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 15f <main+0x15f>
 15f:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 166 <main+0x166>
 166:	e8 00 00 00 00       	call   16b <main+0x16b>
 16b:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
 16f:	eb 80                	jmp    f1 <main+0xf1>
 171:	b8 01 00 00 00       	mov    $0x1,%eax
 176:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 17a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
 181:	00 00 
 183:	74 05                	je     18a <main+0x18a>
 185:	e8 00 00 00 00       	call   18a <main+0x18a>
 18a:	c9                   	leave  
 18b:	c3                   	ret    

000000000000018c <_Z41__static_initialization_and_destruction_0ii>:
 18c:	55                   	push   %rbp
 18d:	48 89 e5             	mov    %rsp,%rbp
 190:	48 83 ec 10          	sub    $0x10,%rsp
 194:	89 7d fc             	mov    %edi,-0x4(%rbp)
 197:	89 75 f8             	mov    %esi,-0x8(%rbp)
 19a:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
 19e:	75 32                	jne    1d2 <_Z41__static_initialization_and_destruction_0ii+0x46>
 1a0:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
 1a7:	75 29                	jne    1d2 <_Z41__static_initialization_and_destruction_0ii+0x46>
 1a9:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 1b0 <_Z41__static_initialization_and_destruction_0ii+0x24>
 1b0:	e8 00 00 00 00       	call   1b5 <_Z41__static_initialization_and_destruction_0ii+0x29>
 1b5:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1bc <_Z41__static_initialization_and_destruction_0ii+0x30>
 1bc:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1c3 <_Z41__static_initialization_and_destruction_0ii+0x37>
 1c3:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1ca <_Z41__static_initialization_and_destruction_0ii+0x3e>
 1ca:	48 89 c7             	mov    %rax,%rdi
 1cd:	e8 00 00 00 00       	call   1d2 <_Z41__static_initialization_and_destruction_0ii+0x46>
 1d2:	90                   	nop
 1d3:	c9                   	leave  
 1d4:	c3                   	ret    

00000000000001d5 <_GLOBAL__sub_I_main>:
 1d5:	55                   	push   %rbp
 1d6:	48 89 e5             	mov    %rsp,%rbp
 1d9:	be ff ff 00 00       	mov    $0xffff,%esi
 1de:	bf 01 00 00 00       	mov    $0x1,%edi
 1e3:	e8 a4 ff ff ff       	call   18c <_Z41__static_initialization_and_destruction_0ii>
 1e8:	5d                   	pop    %rbp
 1e9:	c3                   	ret    

